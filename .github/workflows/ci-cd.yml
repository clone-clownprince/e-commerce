name: CI/CD for E-Commerce Mock

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    env:
      WORKING_DIR: "/home/clownprince/Projects VSCode/e-commerce-mock"  # Set environment variable for the working directory

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Log into DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Check current working directory and list files
      - name: Check current directory and list files
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing files:"
          ls -alh
        working-directory: ${{ env.WORKING_DIR }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ecommerce-mock .
          docker tag ecommerce-mock ${{ secrets.DOCKER_USERNAME }}/ecommerce-mock:latest
        working-directory: ${{ env.WORKING_DIR }}

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-mock:latest
        working-directory: ${{ env.WORKING_DIR }}

  test:
    runs-on: self-hosted
    env:
      WORKING_DIR: "/home/clownprince/Projects VSCode/e-commerce-mock"  # Set environment variable for the working directory

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'

      # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ${{ env.WORKING_DIR }}

      # Run tests
      - name: Run Tests
        run: |
          pytest tests/
        working-directory: ${{ env.WORKING_DIR }}

  deploy:
    runs-on: self-hosted
    needs: build
    env:
      WORKING_DIR: "/home/clownprince/Projects VSCode/e-commerce-mock"  # Set environment variable for the working directory

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set KUBECONFIG from secrets
      - name: Set KUBECONFIG
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
        working-directory: ${{ env.WORKING_DIR }}

      # Test kubectl connection
      - name: Test kubectl connection
        run: kubectl cluster-info
        working-directory: ${{ env.WORKING_DIR }}

      # Deploy to Kubernetes Cluster
      - name: Deploy to Kubernetes Cluster
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml
        working-directory: ${{ env.WORKING_DIR }}
