name: CI/CD for E-Commerce Mock

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log into DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Navigate to the project directory
      - name: Navigate to Project Directory
        run: cd ~/Projects\ VSCode/e-commerce-mock

      # Build Docker image
      - name: Build Docker image
        run: |
          cd ~/Projects\ VSCode/e-commerce-mock
          docker build -t ecommerce-mock .
          docker tag ecommerce-mock ${{ secrets.DOCKER_USERNAME }}/ecommerce-mock:latest

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-mock:latest

  test:
    runs-on: self-hosted

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'

      # Install dependencies
      - name: Install dependencies
        run: |
          cd ~/Projects\ VSCode/e-commerce-mock
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run Tests
        run: |
          cd ~/Projects\ VSCode/e-commerce-mock
          pytest tests/

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set KUBECONFIG
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Test kubectl connection
        run: kubectl cluster-info

      # Deploy to Kubernetes Cluster
      - name: Deploy to Kubernetes Cluster
        run: |
          cd ~/Projects\ VSCode/e-commerce-mock
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml
